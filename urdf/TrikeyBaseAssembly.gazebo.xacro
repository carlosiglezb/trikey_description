<?xml version="1.0"?>
<robot name="trikey" xmlns:xacro="http://ros.org/wiki/xacro">


<!-- Planer Controller -->
  <!-- <gazebo>
    <plugin name="trikey_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>gazebo/cmd_vel</commandTopic>
      <publishTf>false</publishTf>
      <publishOdometryTf>false</publishOdometryTf>
      <publishOdomTF>false</publishOdomTF>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>30.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo> -->

  <!-- Force Based Move -->
  <!-- <gazebo>
      <plugin filename="libgazebo_ros_force_based_move.so" name="gazebo_force_based_move" >
        <commandTopic>gazebo/cmd_vel</commandTopic>
        <odometryTopic>gazebo/odom</odometryTopic>
        <odometryFrame>gazebo/odom</odometryFrame>
        <odometryRate>50.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <publishOdometryTf>false</publishOdometryTf>
      </plugin>
  </gazebo> -->

   <!--Diff Drive Controller  -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>gazebo/cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>false</publishOdomTF>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel2_joint</leftJoint>
      <rightJoint>wheel0_joint</rightJoint>
      <wheelSeparation>0.6</wheelSeparation>
      <wheelDiameter>0.5</wheelDiameter>
      <wheelAcceleration>50</wheelAcceleration>
      <wheelTorque>100</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>




  <!-- Camera Plugin for Gazebo -->
    <!-- Kinect Camera 1 -->
    <gazebo reference="kinect_1_lense_link">
      <sensor type="depth" name="camera1">
        <update_rate>15.0</update_rate>
        <camera name="kinect1">
          <horizontal_fov>2.0944</horizontal_fov>
          <image>
            <width>512</width>
            <height>512</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.5</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="kinect_plugin" filename="libgazebo_ros_openni_kinect.so">
                <baseline>0.1</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>kinect1</cameraName>
                <imageTopicName>/kinect1/color/image_raw</imageTopicName>
                <cameraInfoTopicName>/kinect1/camera_info</cameraInfoTopicName>
                <depthImageTopicName>/kinect1/depth/image_raw</depthImageTopicName>
                <depthImageInfoTopicName>/kinect1/depth/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>/kinect1/points</pointCloudTopicName>
                <frameName>kinect_1_lense_link</frameName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>2.0</pointCloudCutoffMax>
            </plugin>
      </sensor>
    </gazebo>

  <!-- Lidar -->
  <gazebo reference="lidar_link">
    <sensor type="ray" name="rplidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>400</samples>
            <resolution>1</resolution>
	          <min_angle>-3.141592</min_angle>
            <max_angle>3.12414 </max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>8.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
 



    <!-- Transmissions: needed for ROS control -->
    <!-- <transmission name="wheel0_simple_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wheel0_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheel0_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <transmission name="wheel1_simple_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wheel1_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheel1_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <transmission name="wheel2_simple_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wheel2_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheel2_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission> -->

    <!--==================== Sensors ====================-->


    <!-- IMU -->
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>

    <!-- Pose Ground Truth -->
    <gazebo>
        <plugin filename="libgazebo_ros_p3d.so" name="gazebo_ros_p3d">
            <!-- <robotNamespace>/trikey</robotNamespace> -->
            <bodyName>base_link</bodyName>
            <topicName>gazrbo/ground_truth</topicName>
            <gaussianNoise>0</gaussianNoise>
            <alwaysOn>true</alwaysOn>
            <updateRate>60</updateRate>
        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/trikey</robotNamespace>
            <controlPeriod>0.001</controlPeriod>
        </plugin>
    </gazebo>


</robot>

