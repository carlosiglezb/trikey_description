<?xml version="1.0" encoding="utf-8"?>

<robot name="trikey">
  <link name="dummy">
  </link>

  <link name="base_link">
    <visual>
      <origin xyz="0.00252107 -0.0402364 -0.0133064" rpy="0 -0 0" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/motors_base.STL"/>
      </geometry>
      <material name="motors_base_material">
        <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.00252107 -0.0402364 -0.0133064" rpy="0 -0 0" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/motors_base.STL"/>
      </geometry>
      <material name="motors_base_material">
        <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </collision>
    <inertial>
      <origin xyz="-0.103138 -0.0619127 -0.0492546" rpy="0 0 0"/>
      <mass value="18.8276" />
      <inertia ixx="0.303414" ixy="1.35923e-09"  ixz="-1.15948e-09" iyy="0.303414" iyz="-3.03776e-09" izz="0.562153" />
    </inertial>
  </link>

  <!--  Wheels  -->
  <link name="wheel0">
    <visual>
      <origin xyz="0.0157175 -0.000676884 -0.0110091" rpy="-1.5708 -3.56009e-33 -5.76344e-17" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/wheel.STL"/>
      </geometry>
      <material name="wheel_material">
        <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0157175 -0.000676884 -0.0110091" rpy="-1.5708 -3.56009e-33 -5.76344e-17" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/wheel.STL"/>
        </geometry>
      <material name="wheel_material">
      <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </collision>
    <inertial>
      <origin xyz="-3.2877e-05 -5.91764e-05 -0.0194228" rpy="0 0 0"/>
      <mass value="2.36069" />
      <inertia ixx="0.00466517" ixy="9.17346e-07"  ixz="2.34275e-06" iyy="0.00466772" iyz="-4.20658e-06" izz="0.00786801" />
    </inertial>
  </link>

  <link name="wheel1">
    <visual>
      <origin xyz="0.0157175 -0.000676884 -0.0110091" rpy="-1.5708 4.8608e-17 1.36846e-47" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/wheel.STL"/>
      </geometry>
      <material name="wheel_material">
        <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0157175 -0.000676884 -0.0110091" rpy="-1.5708 4.8608e-17 1.36846e-47" />
      <geometry>
      <mesh filename="package://trikey_description/meshes/wheel.STL"/>
      </geometry>
      <material name="wheel_material">
      <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </collision>
    <inertial>
      <origin xyz="-3.2877e-05 -5.91764e-05 -0.0194228" rpy="0 0 0"/>
      <mass value="2.36069" />
      <inertia ixx="0.00466517" ixy="9.17346e-07"  ixz="2.34275e-06" iyy="0.00466772" iyz="-4.20658e-06" izz="0.00786801" />
    </inertial>
  </link>

  <link name="wheel2">
    <visual>
      <origin xyz="0.0157175 -0.000676884 -0.00283407" rpy="-1.5708 -2.51863e-17 3.13582e-17" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/wheel.STL"/>
      </geometry>
      <material name="wheel_material">
        <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0157175 -0.000676884 -0.00283407" rpy="-1.5708 -2.51863e-17 3.13582e-17" />
      <geometry>
        <mesh filename="package://trikey_description/meshes/wheel.STL"/>
      </geometry>
      <material name="wheel_material">
        <color rgba="0.792157 0.819608 0.933333 1.0"/>
      </material>
    </collision>
    <inertial>
      <origin xyz="-3.2877e-05 -5.91764e-05 -0.0112478" rpy="0 0 0"/>
      <mass value="2.36069" />
      <inertia ixx="0.00466517" ixy="9.17346e-07"  ixz="2.34275e-06" iyy="0.00466772" iyz="-4.20658e-06" izz="0.00786801" />
    </inertial>
  </link>

  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57079632679 0 0"/>
      <geometry>
        <mesh filename="package://trikey_description/meshes/rplidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="lidar_material">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://trikey_description/meshes/rplidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="lidar_material">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="1.57079632679 0 0"/>
      <mass value="1e-6" />
      <inertia ixx="1e-6" ixy="1e-6"  ixz="1e-6" iyy="1e-6" iyz="1e-6" izz="1e-6" />
    </inertial>
  </link>


  <!-- Azure Kinect Camera Link (Top Camera) -->
  <link name="camera_base">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://trikey_description/meshes/Azure_Kinect.stl"/>
      </geometry>
      <material name="kinect_material">
        <color rgba="0.9 0.2 0.24 1.0"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://trikey_description/meshes/Azure_Kinect.stl"/>
      </geometry>
      <material name="kinect_material">
        <color rgba="0.9 0.2 0.24 1.0"/>
      </material>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value=".44" />
      <inertia ixx="10.173985" ixy="0.212137"  ixz="-0.09591" iyy="5.191632" iyz="0.505713" izz="5.853716" />
    </inertial>
  </link>

  
  <!-- Azure Kinect Camera Link (Bottom Camera) -->
  <link name="kinect_2_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://trikey_description/meshes/Azure_Kinect.stl"/>
      </geometry>
      <material name="kinect_material">
        <color rgba="0.9 0.2 0.24 1.0"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://trikey_description/meshes/Azure_Kinect.stl"/>
      </geometry>
      <material name="kinect_material">
        <color rgba="0.9 0.2 0.24 1.0"/>
      </material>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value=".44" />
      <inertia ixx="10.173985" ixy="0.212137"  ixz="-0.09591" iyy="5.191632" iyz="0.505713" izz="5.853716" />
    </inertial>
  </link>


  <!-- Azure Kinect Camera Lense Link (Top Camera) -->
  <link name="kinect_1_lense_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 1.57 0" />
      <geometry>
        <cylinder length="0.001" radius="0.01"/>
      </geometry>
    </visual>
  </link>

  <!-- Azure Kinect Camera Lense Link (Bottom Camera) -->
  <link name="kinect_2_lense_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 1.57 0" />
      <geometry>
        <cylinder length="0.001" radius="0.01"/>
      </geometry>
    </visual>
  </link>


  <!-- Joints -->
  <joint name="dummy_joint" type="fixed">
    <parent link="dummy"/>
    <child link="base_link"/>
  </joint>

  <joint name="wheel0_joint" type="continuous">
    <origin xyz="-0.103157 -0.317313 -0.144393" rpy="1.5708 0.599769 -5.54919e-17" />
    <parent link="base_link" />
    <child link="wheel0" />
    <axis xyz="0 0 1"/>
    <limit effort="2" velocity="20" />
    <joint_properties friction="0.0"/>
  </joint>

  <joint name="wheel1_joint" type="continuous">
    <origin xyz="0.110261 0.0612702 -0.144393" rpy="1.5708 0.632117 2.0944" />
    <parent link="base_link" />
    <child link="wheel1" />
    <axis xyz="0 0 1"/>
    <limit effort="2" velocity="20" />
    <joint_properties friction="0.0"/>
  </joint>

  <joint name="wheel2_joint" type="continuous">
    <origin xyz="-0.323445 0.0653045 -0.144393" rpy="-1.5708 -1.38778e-17 1.0472" />
    <parent link="base_link" />
    <child link="wheel2" />
    <axis xyz="0 0 1"/>
    <limit effort="2" velocity="20" />
    <joint_properties friction="0.0"/>
  </joint>

  <!-- Distance from chassis center to lidar are (from CAD): [0 -0.232682 0.34108] -->
  <!-- distance from chassis STL origin to actual center (manually tuned): [-0.103 -0.057 0] -->
  <joint name="lidar_joint" type="fixed">
    <origin xyz="-0.103 -0.289682 0.34108" rpy="0. 0. 1.57079632"/>
    <parent link="base_link"/>
    <child link="lidar_link"/>
  </joint>


    <!-- Kinect Camera Joints -->
    <joint name="kinect_1_joint" type="fixed">
        <origin xyz="-0.1144 -0.261352 0.22108" rpy="0 -1.57079632679 1.57079632679"/>
        <parent link="base_link"/>
        <child link="camera_base"/>
    </joint>
<!--    <joint name="kinect_1_joint" type="fixed">-->
<!--        <origin xyz="-0.01239 -0.289682 0.28607" rpy="0 -1.0471975511965976 1.57079632679"/>-->
<!--        <parent link="base_link"/>-->
<!--        <child link="camera_base"/>-->
<!--    </joint>-->

    <joint name="kinect_2_joint" type="fixed">
        <origin xyz="0.01239 -0.289682 0.1734" rpy="0 2.0943951023931953 -1.57079632679"/>
        <parent link="base_link"/>
        <child link="kinect_2_link"/>
    </joint>

    <joint name="kinect_1_lense_joint" type="fixed">
        <origin xyz="-0.03 0 0.01" rpy="3.14 -1.57 0"/>
        <parent link="camera_base"/>
        <child link="kinect_1_lense_link"/>
    </joint>

    <joint name="kinect_2_lense_joint" type="fixed">
        <origin xyz="-0.03 0 0.01" rpy="0 -1.57 0"/>
        <parent link="kinect_2_link"/>
        <child link="kinect_2_lense_link"/>
    </joint>

  <!-- Camera Plugin for Gazebo -->
  <!-- Note on gaussian noise statistics:
  Noise is sampled independently per pixel on each frame. That pixel's noise value is added
  to each of its color channels, which at that point lie in the range [0,1]. -->
  <!-- Note on kinect plugin:
  Keep update_rate to zero, update_rate in the parent <sensor> tag will control the frame rate. -->
  <!-- Kinect Camera 1 -->
    <gazebo reference="kinect_1_lense_link">
      <sensor type="depth" name="camera1">
        <update_rate>15.0</update_rate>
        <camera name="kinect1">
          <horizontal_fov>2.0944</horizontal_fov>
          <image>
            <width>512</width>
            <height>512</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.5</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="kinect_plugin" filename="libgazebo_ros_openni_kinect.so">
                <baseline>0.1</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>kinect1</cameraName>
                <imageTopicName>/kinect1/color/image_raw</imageTopicName>
                <cameraInfoTopicName>/kinect1/camera_info</cameraInfoTopicName>
                <depthImageTopicName>/kinect1/depth/image_raw</depthImageTopicName>
                <depthImageInfoTopicName>/kinect1/depth/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>/kinect1/points</pointCloudTopicName>
                <frameName>kinect_1_lense_link</frameName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>2.0</pointCloudCutoffMax>
            </plugin>
      </sensor>
    </gazebo>

    <!-- Kinect Camera 2 -->
    <gazebo reference="kinect_2_lense_link">
      <sensor type="depth" name="camera2">
        <update_rate>15.0</update_rate>
        <camera name="kinect2">
          <horizontal_fov>2.0944</horizontal_fov>
          <image>
            <width>512</width>
            <height>512</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.5</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="kinect_plugin" filename="libgazebo_ros_openni_kinect.so">
                <baseline>0.1</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>kinect2</cameraName>
                <imageTopicName>/kinect2/color/image_raw</imageTopicName>
                <cameraInfoTopicName>/kinect2/camera_info</cameraInfoTopicName>
                <depthImageTopicName>/kinect2/depth/image_raw</depthImageTopicName>
                <depthImageInfoTopicName>/kinect2/depth/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>/kinect2/points</pointCloudTopicName>
                <frameName>kinect_2_lense_link</frameName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>2.0</pointCloudCutoffMax>
            </plugin>
      </sensor>
    </gazebo>


  <!-- Transmissions: needed for ROS control -->
  <transmission name="wheel0_simple_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel0_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel0_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <transmission name="wheel1_simple_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel1_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel1_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <transmission name="wheel2_simple_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel2_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel2_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <!-- Sensors -->
  <!--
  <gazebo reference="lidar_link">
    <sensor type="ray" name="rplidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>400</samples>
            <resolution>1</resolution>
	    <min_angle>-3.141592</min_angle>
            <max_angle>3.141592 </max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>8.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>base_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
 -->

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/trikey</robotNamespace>
    </plugin>
  </gazebo>

</robot>
